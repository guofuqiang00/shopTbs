<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 加载properties文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>

    <!-- 自动扫描  dao层 和service层 -->
    <context:component-scan base-package="com.tbs.dao"/>
    <context:component-scan base-package="com.tbs.service"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
       <!-- <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>-->
        <property name="driverClassName" value="${jdbc.driver-class-name}"/>
        <property name="dbType" value="${jdbc.type}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--        &lt;!&ndash; 扫描model包 &ndash;&gt;-->
<!--        <property name="typeAliasesPackage" value="com.tbs."/>-->
<!--        &lt;!&ndash; 扫描sql配置文件:mapper需要的xml文件&ndash;&gt;-->
<!--        <property name="mapperLocations" value="classpath:mapper/*.xml"/>-->

        <property name="dataSource" ref="dataSource"></property>
        <!--自动扫描mapper.xml文件 -->
        <property name="mapperLocations" value="classpath:com/tbs/dao/*/*.xml"/>
             <!--   <property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
<!--        <property name="mapperLocations" value="classpath:com/tbs/dao/*/*.xml"></property>-->
        <!-- mybatis -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--别名-->
        <property name="typeAliasesPackage" value="com.tbs.entity"></property>
    </bean>

    <!-- Mapper动态代理开发，扫描dao接口包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.tbs"/>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
    </bean>



    <!-- 指明使用注解的方式来管理事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    </beans>